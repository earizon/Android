# Android Debug Bridge (adb)  101 [[{]]
* https://github.com/tldr-pages/tldr/blob/master/pages/common/adb.md
* https://github.com/tldr-pages/tldr/blob/master/pages/common/adb-install.md
* https://github.com/tldr-pages/tldr/blob/master/pages/common/adb-reverse.md
* https://github.com/tldr-pages/tldr/blob/master/pages/common/adb-shell.md
* adb: Android Debug Bridge: communicate with Android device (or emulator).
  ```
  | $ cd ${HOME}/Android/Sdk/platform-tools
  | $ ls -ld *
  | -rwxr-xr-x. 1 earizon earizon 7822088 May 20 16:38 adb
  | -rwxr-xr-x. 1 earizon earizon  303608 May 20 16:38 etc1tool
  | -rwxr-xr-x. 1 earizon earizon 2480432 May 20 16:38 fastboot
  | -rwxr-xr-x. 1 earizon earizon   13312 May 20 16:38 hprof-conv
  | drwxr-xr-x. 2 earizon earizon    4096 May 20 16:38 lib64
  | -rwxr-xr-x. 1 earizon earizon  264016 May 20 16:38 make_f2fs
  | -rwxr-xr-x. 1 earizon earizon  264000 May 20 16:38 make_f2fs_casefold
  | -rwxr-xr-x. 1 earizon earizon  874336 May 20 16:38 mke2fs
  | -rw-r--r--. 1 earizon earizon    1157 May 20 16:38 mke2fs.conf
  | -rw-r--r--. 1 earizon earizon 1128669 May 20 16:38 NOTICE.txt
  | -rw-r--r--. 1 earizon earizon   18404 May 20 16:38 package.xml
  | -rw-r--r--. 1 earizon earizon      38 May 20 16:38 source.properties
  | -rwxr-xr-x. 1 earizon earizon 3335144 May 20 16:38 sqlite3
  ```
* It is recommended to update when upgrading Android Studio.
  for example, from within Android Studio:
  ```
  | Settings 
  |   -> "Language and Tools"
  |      -> "Android SDK"
  |         -> "SDK Tools"
  ```

* REF: <https://developer.android.com/studio/command-line/adb>
  ```
  |┌─ $: prompt of development machine (vs Android) shell
  |$ adb devices       # <·· Get list of connected devices
  |$ adb start-server  # <·· Check whether server is running or start it.
  |$ adb kill-server   # <·· terminate server
  |
  │#           ┌─────┬─ command "within" Android device
  |$ adb shell getprop          
  |$ adb shell         # <·· Enter shell inside Android
  |                    #     (vs dev.machine shell)
  |
  |─── Commands executed inside Android shell (after `adb shell`)
  |
  |┌─ #: prompt of Android (vs development machine) shell
  |v ┌┬─ pm: package manager
  |# pm reset-permissions #  <·· reset to default all runtime permissions.
  |# pm \   
  |  revoke $PACKAGE $PERMISSION # <·· Revoke a dangerous permission
  |# input 
  |  keyevent $KEYCODE #  <·· Trigger key event
  |# pm clear $PACKAGE # <··  Clear app's data
  |
  |  ┌┬─ am: activity manager
  |$ am start \   
  |  -n some.pkg/some.pkg.MainActivity # <·· Start activity
  |# am start         
  |  -a android.intent.action.MAIN \
  |  -n com.android.browser/.BrowserActivity  # <·· start browser
  |                                           #     through activity 
  |                                           #     ("inside" shell)
  |# am start \       
  |   -a android.intent.action.MAIN \
  |   -n com.android.settings/.Settings       # <·· launch settings
  |# am start \        
  |   -n com.oficina24x7.indexer/com.oficina24x7.indexer.MainActivity
  |# am start \   
  |  -W \
  |  -c android.intent.category.HOME \
  |  -a android.intent.action.MAIN            # <·· Start home activity
  |
  |# exit                                     # <·· Exit Android shell
  |                                           #     (back to host shell)
  |┌─················································┘
  |$ adb install -r $FILE.APK <·· Push app ().
  |  -s $SERIAL_NUMBER overrides $ANDROID_SERIAL
  |  -r reinstall, keeping its data.
  |  -d allowing version code downgrade
  |     (debuggable packages only)
  |  -d Grant all permissions listed in app manifest.
  |  --fastdeploy: update only changed parts of the APK
  |
  |$ adb -s emulator-5554 \  <·· Uninstall
  |  uninstall app.apk
  |
  |$ adb pull $FILE_OR_DIR_SRC $LOCAL_PATH   <·· device -> local
  |$ adb push $FILE_OR_DIR_SRC $REMOTE_PATH  <·· local  -> device
  |
  |$ adb reverse --list  <·· List all reverse socket connections from emul./devices
  |$ adb reverse tcp:REMOTE_PORT tcp:LOCAL_PORT
  |$ adb reverse --remove tcp:REMOTE_PORT
  |$ adb reverse --remove-all
  |
  |$ adb logcat -s -d UNIVERSAL_INDEXER:d   
  |  Options include:
  |  -s              Set default filter to silent.
  |                  Like specifying filterspec '*:s'
  |  -f <filename>   Log to file. Default to stdout
  |  -r [<kbytes>]   Rotate log every kbytes. (16 if unspecified). Requires -f
  |  -n <count>      Sets max number of rotated logs to <count>, default 4
  |  -v <format>     Sets the log print format, where <format> is one of:
  |                      brief process tag thread raw time threadtime long
  |                      (defaults to env.var ${ANDROID_PRINTF_LOG})
  |  -c              clear (flush) the entire log and exit
  |  -d              dump the log and then exit (don't block)
  |  -t <count>      print only the most recent <count> lines (implies -d)
  |  -g              get the size of the log's ring buffer and exit
  |  -b <buffer>     Request alternate ring buffer, 'main', 'system', 'radio'
  |                  or 'events'. Multiple -b parameters are allowed and the
  |                  results are interleaved. The default is -b main -b system.
  |  -B              output the log in binary
  |  filterspecs are a series of <tag>[:priority], <tag>[:priority], ...
  |    Priority: V Verbose,D Debug (default), I Info, W Warn, E Error, F Fatal, S Silent
  | filterspec defaults to ${ANDROID_LOG_TAGS} || '*:I'
  ```

# Android Asset Packaging Tool (AAPT)

- https://github.com/tldr-pages/tldr/blob/master/pages/common/aapt.md
  ```
  |$ aapt list app.apk   <·· List files contained in an APK archive.
  |$ aapt dump badging \ <·· Display app's metadata (version, permissions, etc.)
  |  app.apk
  |$ aapt package -F     <·· Create APK with files from directory.
  |  app.apk $PATH_TO_DIR
  ```

# Android Packaging Tool (APK), replaced by the newer AAPT
- https://github.com/tldr-pages/tldr/blob/master/pages/common/apktool.md
  ```
  |$ apktool d $FILE.apk <·· Decode an APK file.
  |$ apktool b $DIR_PATH <·· Build APK file from DIR
  |$ apktool if $FRAMEWORK.APK <·· Install&store a framework
  ```

[[{troubleshooting.debugging]]
# androguard: Debug DEX,ODEX,APK,Android binary xml, 

* Python based tool to inspect/Disassemble/decompile DEX/ODEX/APK/Android binary xml/resources,...

* REF
  * <https://github.com/androguard/androguard>
  * <https://github.com/tldr-pages/tldr/blob/master/pages/common/androguard.md>

```
  |$ androguard axml APP.apk   <·· Display Android app manifest
  |$ androguard apkid APP.apk  <·· Display app metadata (version and app ID)
  |$ androguard decompile \    <·· Decompile Java code from an app.
  |  APP.apk --output DIR_PATH
|https://github.com/tldr-pages/tldr/blob/master/pages/common/dexdump.md
  ```
[[troubleshooting.debugging}]]

[[}]]

