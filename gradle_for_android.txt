# Gradle

## build variants with gradle's android plugin: [[{devOps.build]]

* <https://developer.android.com/studio/build/build-variants>

  ```
  | build-type variants:
  | |single project|1<···> N |app versions|
  ```
- allows for "N" app-versions (free-limited, paid, device1, device2, ..)  from 1 project.

- properly manage dependencies & signing configurations.

  ```
  |  $ cat build.gradle 
  |  ...
  |  android {
  |    ...
  |    defaultConfig {   <··· defaultConfig is a default ProductFlavor applied to any flavor
  |                          (See a few lines down for more info)
  |        manifestPlaceholders = [hostName:"www.example.com"]
  |        ...
  |    }
  |
  |+   buildTypes {  <··· 'debug' and 'release' build-types autogenerated by A.Studio
  |+       release {
  |+           minifyEnabled true
  |+           proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
  |+       }
  |+
  |+       debug {
  |+           applicationIdSuffix ".debug"      <··· Set applicationIdSuffix for debug build-type
  |+           debuggable true
  |+       }
  |+
  |+       /**
  |+        * The `initWith` property lets you copy configurations from other build types,
  |+        * then configure only the settings you want to change. This one copies the debug build
  |+        * type, and then changes the manifest placeholder and application ID.
  |+        */
  |+       staging {                             <·· non-standard "staging" build-type
  |+           initWith debug                        <·· Use debug setting by default
  |+           manifestPlaceholders = [hostName:"internal.example.com"]
  |+           applicationIdSuffix ".debugStaging"
  |+           matchingFallbacks = ['debug', 'release'] <··· SORTED list: use in order when  dependency does
  |        }                                                 NOT include a "staging" build type.
  |
  |+       }
  |+
  |+   flavorDimensions "version"   <··· 1+ when using product-flavors 1+ flavor-dimensions must exist
  |+   productFlavors {  <·· similar to build types.
  |+       demo {
  |+           // Assigns this product flavor to the "version" flavor dimension.
  |+           // If you are using only one dimension, this property is optional,
  |+           // and the plugin automatically assigns all the module's flavors to
  |+           // that dimension.
  |+           dimension "version"            <··· All flavors must belong to a named "flavor-dimension"
  |+           applicationIdSuffix ".demo"         (will be autoasigned by Android Gradle plugin if just
  |+           versionNameSuffix "-demo"            one flavor-dimmension exists)
  |+       }
  |+       full {
  |+           dimension "version"
  |+           applicationIdSuffix ".full"         <··· custom app suffix for flavor makes app
  |+           versionNameSuffix "-full"                appears as separate listings on Google Play
  |+       }
  |+   }
  |
  |+   variantFilter { variant ->       <··· (build variants will no longer appear in Build > Select Build Variant menu)
  |+       def names = variant.flavors*.name
  |+       if (names.contains("demo") && names.contains("Release")) {
  |+           setIgnore(true)
  |+       }
  |+   }
  |  }
  |
  |+ dependencies {
  |+     freeImplementation project(":mylib01") // <·· Adds local "mylib01" as dependency for "free" flavor.
  |+     testImplementation 'junit:junit:4.12'  // <·· Adds remote binary dependency for local tests (only).
  |+     androidTestImplementation              // <·· Adds only for the instrumented test APK.
  |+       'com.android.support.test.espresso:espresso-core:3.0.2'
  |+ }
  ```

  ```
  | demoDebug        gradle-android-plugin generated variants:
  | demoRelease      (Go to: Build > "Build Variant" to choose built target)
  | fullDebug
  | fullRelease
  |     └─────┴─ build-type
  | └──┴─······· flavor
  ```

- See original link for further info on:
  - android { sourceSets { ...  } }
  - missingDimensionStrategy
  - manually configure signing configurations.
[[devOps.build}]]
